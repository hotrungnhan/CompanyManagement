package com.example.companymanagement.viewcontroller.adapterimport android.text.format.DateUtilsimport android.util.Logimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport android.widget.TextViewimport androidx.fragment.app.FragmentActivityimport androidx.recyclerview.widget.RecyclerViewimport com.example.companymanagement.Rimport com.example.companymanagement.model.leave.LeaveInfoModelimport com.example.companymanagement.utils.customize.OnBindOwnerLisenerimport com.example.companymanagement.viewcontroller.fragment.signleave.employeLeave.DialogDetailLeaveimport com.google.android.material.imageview.ShapeableImageViewclass LeaveRecyclerViewAdapter: RecyclerView.Adapter<LeaveHolder>() {    var list : MutableList<LeaveInfoModel>? = null    private var ownerbindinglisener: OnBindOwnerLisener? = null;    override fun onCreateViewHolder(        parent: ViewGroup,        viewType: Int,    ): LeaveHolder {        val view = LayoutInflater.from(parent.context)            .inflate(R.layout.item_history, parent, false)        return LeaveHolder(view)    }    fun setData(data: MutableList<LeaveInfoModel>) {        this.list = data;        this.notifyDataSetChanged()    }    override fun getItemCount(): Int = list?.size ?: 10    override fun onBindViewHolder(holder: LeaveHolder, position: Int) {        if (list?.get(position) != null) {            holder.bind(list!![position])            ownerbindinglisener?.onBind(list!![position].Owneruid!!, holder)            holder.itemView.setOnClickListener {                val bt = DialogDetailLeave( list!![position])                bt.show((holder.itemView.context as FragmentActivity).supportFragmentManager.beginTransaction(),                    "itemshow")            }        }    }    fun setOnBindOwner(e: OnBindOwnerLisener) {        ownerbindinglisener = e;    }}class LeaveHolder(itemview: View) : RecyclerView.ViewHolder(itemview){    val avatar: ShapeableImageView = itemView.findViewById(R.id.item_leave_owner_avatar)    val name: TextView = itemView.findViewById(R.id.item_leave_owner_name)    var timecreate: TextView = itemview.findViewById(R.id.item_time_create)    var dayleave: TextView = itemview.findViewById(R.id.item_leave_day)    var check: TextView = itemview.findViewById(R.id.item_leave_check)    fun bind(leave: LeaveInfoModel){        dayleave.text = leave.day_leave.toString()        timecreate.text = DateUtils.getRelativeTimeSpanString(leave.CreateTime?.time!!)        Log.d("abc",leave.check_Result.toString())        if (leave.check_Result == true) {            check.text = "da duyet"        } else {            check.text = "chua duyet"        }    }}